plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id "org.sonarqube" version "5.0.0.4638"
}


group = 'com.twix'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.flywaydb:flyway-core:9.1.6'
//	implementation 'org.flywaydb:flyway-mysql:9.1.6'
//	implementation 'mysql:mysql-connector-java:8.0.30'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.google.code.gson:gson:2.9.1'
	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
//	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
//	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
//	implementation 'ch.qos.logback:logback-classic:1.2.11'
//	implementation 'net.logstash.logback:logstash-logback-encoder:7.1.1'
//	implementation 'org.springframework.boot:spring-boot-starter-validation'
//	implementation 'org.springframework.boot:spring-boot-starter-batch'
//	implementation 'org.springframework.boot:spring-boot-starter-aop'
//	implementation 'org.springdoc:springdoc-openapi-ui:1.6.10'
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.security:spring-security-test'
//	implementation 'org.postgresql:postgresql:42.4.0'
	runtimeOnly 'org.postgresql:postgresql'
}

//tasks.named('sonarqube').configure{
//	dependsOn jacocoTestReport;
//}

jacocoTestReport {
	reports {
		xml.required.set(true)
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

